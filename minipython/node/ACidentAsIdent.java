/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ACidentAsIdent extends PCidentAsIdent
{
    private TComma _comma_;
    private TId _id_;
    private PAsIdent _asIdent_;

    public ACidentAsIdent()
    {
    }

    public ACidentAsIdent(
        TComma _comma_,
        TId _id_,
        PAsIdent _asIdent_)
    {
        setComma(_comma_);

        setId(_id_);

        setAsIdent(_asIdent_);

    }
    public Object clone()
    {
        return new ACidentAsIdent(
            (TComma) cloneNode(_comma_),
            (TId) cloneNode(_id_),
            (PAsIdent) cloneNode(_asIdent_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACidentAsIdent(this);
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public TId getId()
    {
        return _id_;
    }

    public void setId(TId node)
    {
        if(_id_ != null)
        {
            _id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _id_ = node;
    }

    public PAsIdent getAsIdent()
    {
        return _asIdent_;
    }

    public void setAsIdent(PAsIdent node)
    {
        if(_asIdent_ != null)
        {
            _asIdent_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _asIdent_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_comma_)
            + toString(_id_)
            + toString(_asIdent_);
    }

    void removeChild(Node child)
    {
        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_id_ == child)
        {
            _id_ = null;
            return;
        }

        if(_asIdent_ == child)
        {
            _asIdent_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(_asIdent_ == oldChild)
        {
            setAsIdent((PAsIdent) newChild);
            return;
        }

    }
}
