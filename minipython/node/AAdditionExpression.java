/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AAdditionExpression extends PExpression
{
    private PAddition _addition_;

    public AAdditionExpression()
    {
    }

    public AAdditionExpression(
        PAddition _addition_)
    {
        setAddition(_addition_);

    }
    public Object clone()
    {
        return new AAdditionExpression(
            (PAddition) cloneNode(_addition_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAdditionExpression(this);
    }

    public PAddition getAddition()
    {
        return _addition_;
    }

    public void setAddition(PAddition node)
    {
        if(_addition_ != null)
        {
            _addition_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _addition_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_addition_);
    }

    void removeChild(Node child)
    {
        if(_addition_ == child)
        {
            _addition_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_addition_ == oldChild)
        {
            setAddition((PAddition) newChild);
            return;
        }

    }
}
