/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AMinMinMax extends PMinMax
{
    private TMin _min_;

    public AMinMinMax()
    {
    }

    public AMinMinMax(
        TMin _min_)
    {
        setMin(_min_);

    }
    public Object clone()
    {
        return new AMinMinMax(
            (TMin) cloneNode(_min_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMinMinMax(this);
    }

    public TMin getMin()
    {
        return _min_;
    }

    public void setMin(TMin node)
    {
        if(_min_ != null)
        {
            _min_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _min_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_min_);
    }

    void removeChild(Node child)
    {
        if(_min_ == child)
        {
            _min_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_min_ == oldChild)
        {
            setMin((TMin) newChild);
            return;
        }

    }
}
